name: ci

on:
  - push
  - pull_request

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .tool-versions

      - name: Cache Restore
        id: cache-restore-depends
        uses: actions/cache/restore@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        if: steps.cache-restore-depends.outputs.cache-hit != 'true'
        run: npm ci

      - name: Cache Save
        if: steps.cache-restore-depends.outputs.cache-hit != 'true'
        id: cache-save-depends
        uses: actions/cache/save@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('package-lock.json') }}

  lint:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .tool-versions

      - name: Cache Restore
        id: cache-restore-depends
        uses: actions/cache/restore@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('package-lock.json') }}

      - name: Lint
        run: npm run lint

  build:
    needs: lint
    runs-on: ubuntu-latest
    env:
      POSTGRES_PRISMA_URL: postgresql://postgres:postgres@localhost:5432/mydb
      POSTGRES_URL_NON_POOLING: postgresql://postgres:postgres@localhost:5432/mydb
    services:
      database:
        image: postgres:16.3
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_HOST: localhost
          POSTGRES_DB: mydb
          TZ: UTC
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .tool-versions

      - name: Cache Restore
        id: cache-restore-depends
        uses: actions/cache/restore@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('package-lock.json') }}

      - name: Build
        run: |
          touch .env
          echo "POSTGRES_PRISMA_URL=${POSTGRES_PRISMA_URL}" >> .env
          echo "POSTGRES_URL_NON_POOLING=${POSTGRES_URL_NON_POOLING}" >> .env
          npm run build

      - name: Cache Save production
        if: steps.cache-restore-production.outputs.cache-hit != 'true'
        id: cache-save-production
        uses: actions/cache/save@v4
        with:
          path: node_modules
          key: production-${{ runner.os }}-${{ hashFiles('package-lock.json') }}

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .tool-versions

      - name: Cache Restore production
        id: cache-restore-production
        uses: actions/cache/restore@v4
        with:
          path: node_modules
          key: production-${{ runner.os }}-${{ hashFiles('package-lock.json') }}

      - name: Test
        run: npm test
